import pandas as pd

# Read the CSV file into a DataFrame
df = pd.read_csv('bmi.csv')

# Extract height, weight, and size columns into separate lists
heights = df['height(in cm)'].tolist()
weights = df['weight(in cm)'].tolist()
shirt_sizes = df['size of shirt'].tolist()
k = 3  # Choose the number of nearest neighbors to consider
new_height = 43.6
new_weight = 140

# Calculate the Euclidean distance between the new data point and each existing data point
distances = []
for i in range(len(heights)):
    distance = ((new_height - heights[i]) **
                2 + (new_weight - weights[i])**2)**0.5
    distances.append((distance, shirt_sizes[i]))

# Sort the distances list in ascending order
distances.sort()
print(distances)

# Select the K-nearest neighbors
k_neighbors = distances[:k]
print(k_neighbors)

# Determine the majority class among the K-nearest neighbors
shirt_size = {'M': 0, 'L': 0}
for _, sugar in k_neighbors:
    shirt_size[sugar] += 1

predicted_size = max(shirt_size, key=lambda x: shirt_size[x])

# Print the predicted sugar value
print("Predicted Sugar Value:", predicted_size)
